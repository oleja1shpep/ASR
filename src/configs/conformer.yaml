defaults:
  - model: conformer
  - writer: wandb
  - metrics: beam_search
  - datasets: example
  - dataloader: example
  - transforms: example_only_instance
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 1e-3
  weight_decay: 1e-6
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 1e-3
  # final_div_factor: 4
  pct_start: 0.1
  steps_per_epoch: ${trainer.epoch_len}
  epochs: ${trainer.n_epochs}
  anneal_strategy: cos
loss_function:
  _target_: src.loss.CTCLossWrapper
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
  beam_size: 5
trainer:
  log_step: 50
  n_epochs: 10
  epoch_len: 500
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  from_pretrained: saved/overfit-attn-rope/model_best.pth
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
